CREATE TABLE IF NOT EXISTS "user" (
	user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	email VARCHAR(255) NOT NULL UNIQUE,
	login VARCHAR(255) NOT NULL UNIQUE,
	birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS friend_status (
	user_id BIGINT NOT NULL REFERENCES "user"(user_id) ON DELETE CASCADE,
	friend_id BIGINT NOT NULL REFERENCES "user"(user_id) ON DELETE CASCADE,
	PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS rating (
	rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(20) UNIQUE
);

CREATE TABLE IF NOT EXISTS film (
	film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(50) NOT NULL UNIQUE,
	description VARCHAR(200),
	release_date DATE,
	duration INTEGER NOT NULL,
	rating_id INTEGER REFERENCES rating(rating_id)
);

CREATE TABLE IF NOT EXISTS genre (
	genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(50) UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genre (
	film_id BIGINT REFERENCES film(film_id) ON DELETE CASCADE,
	genre_id INTEGER REFERENCES genre(genre_id),
	CONSTRAINT film_genre_pk PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS "like" (
	film_id BIGINT REFERENCES film(film_id) ON DELETE CASCADE,
	user_id BIGINT REFERENCES "user"(user_id) ON DELETE CASCADE,
	CONSTRAINT likes_pk PRIMARY KEY (film_id, user_id)
);